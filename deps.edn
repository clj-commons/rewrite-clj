{:paths ["src" "resources"]

 :deps {org.clojure/clojure {:mvn/version "1.9.0"}
        org.clojure/tools.reader {:mvn/version "1.3.5"}}

 :aliases {;;
           ;; Clojure versions we support
           ;;
           :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
           :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}}

           ;;
           ;; ClojureScript version we test with (and support)
           ;;
           :cljs {:extra-deps {org.clojure/clojurescript {:mvn/version "1.10.866"}}}

           ;;
           ;; Test support
           ;;

           ;; linting
           :lint-cache {:replace-paths ["src"]} ;; when building classpath we want to exclude resources
                                                ;; so we do not pick up our own clj-kondo config exports
           :clj-kondo {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2021.04.23"}}
                       :main-opts ["-m" "clj-kondo.main"]}

           :eastwood {:extra-deps {jonase/eastwood {:mvn/version "0.6.0"}}
                      :main-opts ["-m" "eastwood.lint" {:ignored-faults {:deprecations {rewrite-clj.regression-test true
                                                                                        rewrite-clj.zip.whitespace-test true}}}]}

           :test-common {:extra-deps {org.clojure/test.check {:mvn/version "1.1.0"}}
                         :extra-paths ["test"]}

           ;; document block testing
           :test-doc-blocks {:replace-deps {org.clojure/clojure {:mvn/version "1.10.3"}
                                            lread/test-doc-blocks {:mvn/version "1.0.114-alpha"}}
                             :replace-paths []
                             :ns-default lread.test-doc-blocks
                             :exec-args {:docs ["doc/01-user-guide.adoc"
                                                "doc/design/01-merging-rewrite-clj-and-rewrite-cljs.adoc"
                                                "doc/design/namespaced-elements.adoc"
                                                "src/rewrite_clj/node.cljc"]}}

           :test-docs {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                       :extra-paths ["target/test-doc-blocks/test"]}

           ;; kaocha for clojure testing
           :kaocha {:extra-deps {lambdaisland/kaocha {:mvn/version "1.0.861"}
                                 lambdaisland/kaocha-junit-xml {:mvn/version "0.0.76"}
                                 lambdaisland/kaocha-cloverage {:mvn/version "1.0.75"}}
                    :main-opts ["-m" "kaocha.runner"]}

           ;; figwheel for clojurescript testing during dev
           :fig-test {:extra-deps {com.bhauman/figwheel-main {:mvn/version "0.2.13"}}
                      :extra-paths ["target" "test"]
                      :main-opts ["-m" "figwheel.main" "-b" "fig" "-r"]}

           :cljs-test {:extra-deps {olical/cljs-test-runner {:mvn/version "3.8.0"}}
                       :extra-paths ["test"]
                       :main-opts ["-m" "cljs-test-runner.main"]}

           ;; planck for Self-Hosted ClojureScript
           :planck-test {:extra-paths ["target/cljsbuild/test/planck-none/gen"]}

           ;;
           ;; General script deps
           ;;
           :script {:extra-paths ["script"]
                    :extra-deps {org.clojure/tools.namespace {:mvn/version "1.1.0"}
                                 cli-matic/cli-matic {:mvn/version "0.4.3"}}}

           :apply-import-vars {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                               :extra-deps {metosin/malli {:mvn/version "0.5.1"}
                                            io.aviso/pretty {:mvn/version "1.1"}}
                               :ns-default lread.apply-import-vars}

           ;;
           ;; Running tests under Graal
           ;;
           ;; We have two main Graal scenarios:
           ;; sci-test - interpret tests via sci over natively compiled rewrite-clj
           ;; native-test - natively compile src and tests and run

           :sci-test {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                      :extra-paths ["target/generated/sci-test/src"]
                      :extra-deps {lread/sci-test {:git/url "https://github.com/lread/sci-test.git"
                                                   :sha "dac1979c96c51a6bb53108b65c8270d8f30c67fa"}}}

           :native-test {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                         :extra-paths ["target/generated/graal"]}

           ;; usage -M:sci-test:gen-reflection
           :gen-reflection {:main-opts ["-m" "sci-test.generate-reflection-file"]}

           ;;
           ;; Document rewrite-clj* differences
           ;;
           :diff-apis {:extra-paths ["script/resources"]
                       :extra-deps {lread/diff-apis {:git/url "https://github.com/lread/diff-apis"
                                                     :sha "cd8096e0b5e0c0ea4850cb9eafe2d085d8912442"}}
                       :main-opts ["-m" "diff-apis.main" "projects"]}

           ;;
           ;; Deployment
           ;;
           :jar {:replace-deps {com.github.seancorfield/depstar {:mvn/version "2.0.216"}}
                 :exec-fn hf.depstar/jar
                 :exec-args {:jar "target/rewrite-clj.jar"
                             :paths-only true
                             :verbose true
                             :jar-type :thin}}

           :deploy {:replace-deps {slipset/deps-deploy {:mvn/version "0.1.5"}}
                    :exec-fn deps-deploy.deps-deploy/deploy}

           ;; usage: :deploy:remote - for Clojars
           :remote {:exec-args {:installer :remote
                                :artifact "target/rewrite-clj.jar"}}

           ;; usage: :deploy:local - for local maven repo
           :local {:exec-args {:installer :local
                               :artifact "target/rewrite-clj.jar"}}

           ;;
           ;; Maintenance support
           ;;
           :outdated {:extra-deps {com.github.liquidz/antq {:mvn/version "0.14.1"}
                                   org.slf4j/slf4j-simple {:mvn/version "1.7.30"} ;; to rid ourselves of logger warnings
                                   }
                      :main-opts ["-m" "antq.core"
                                  "--reporter=edn"
                                  "--exclude=lambdaisland/kaocha@1.0.829" ;; https://github.com/lambdaisland/kaocha/issues/208
                                  ]}}}
